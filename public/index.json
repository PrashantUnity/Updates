[{"content":"Optical Character Recognition Using Tesseract Tesseract OCR is one of the most popular open-source OCR libraries. It supports a wide range of languages and can recognize text from various image formats.\nFeatures Supported Formats: Multiple image formats (JPG, PNG, BMP, etc.). Languages: Supports multiple languages. Extensibility: Highly customizable and extensible. Efficiency: Greater than 70% accuracy, which can be increased by image modification. Requirements Platform: Windows, Linux, Mac SDK: .NET SDK Code Editor: Visual Studio 2022 and above (recommended) or any code editor of your choice Source Code Clone the repository:\ngit clone https://github.com/codefrydev/OCR.git Usage Download or clone the project. Select the appropriate project: Cross Platform: OCR.Tesseract.NetCore Windows: OCR.Tesseract.NetFramework Open the Program.cs file. Provide the image path you want to work on. Run the application. Sample Code static readonly string imagePath = \u0026#34;imagetwo.jpg\u0026#34;; static string extractedTextImageSharp = string.Empty; using (var engine = new TesseractEngine(@\u0026#34;./tessdata\u0026#34;, \u0026#34;eng\u0026#34;, EngineMode.LstmOnly)) { using var img = Pix.LoadFromFile(imagePath); using var page = engine.Process(img); extractedTextImageSharp = page.GetText(); } Console.WriteLine(extractedTextImageSharp); Improving Performance You can enhance performance by modifying the image contrast before extracting text. Below is a sample code snippet for modifying image contrast.\nSample Code for Modifying Image Contrast static void ImagSharpMethod(string path) { using (Image\u0026lt;Rgba32\u0026gt; image = Image.Load\u0026lt;Rgba32\u0026gt;(path)) { image.Mutate(x =\u0026gt; x.Resize(image.Width * times, image.Height * times)); // Iterate through each pixel for (int y = 0; y \u0026lt; image.Height; y++) { for (int x = 0; x \u0026lt; image.Width; x++) { // Get the pixel color Rgba32 pixelColor = image[x, y]; // Check if the pixel color matches the target colors if (IsTargetColor(pixelColor)) { // Set to absolute white image[x, y] = Rgba32.ParseHex(\u0026#34;#fff\u0026#34;); } } } // Save the modified image image.Save(modifiedImagePath); } } static bool IsTargetColor(Rgba32 color) { // Blue and light blue range if (color.B \u0026gt; 128 \u0026amp;\u0026amp; color.R \u0026lt; 128 \u0026amp;\u0026amp; color.G \u0026lt; 128) return true; // Grey range if (color.R \u0026gt; 128 \u0026amp;\u0026amp; color.R \u0026lt; 200 \u0026amp;\u0026amp; color.G \u0026gt; 128 \u0026amp;\u0026amp; color.G \u0026lt; 200 \u0026amp;\u0026amp; color.B \u0026gt; 128 \u0026amp;\u0026amp; color.B \u0026lt; 200) return true; // Yellow range if (color.R \u0026gt; 200 \u0026amp;\u0026amp; color.G \u0026gt; 200 \u0026amp;\u0026amp; color.B \u0026lt; 128) return true; // Add more color checks as needed return false; } Conclusion Tesseract OCR is a versatile open-source option supporting multiple languages and formats. Choose the one that best fits your project\u0026rsquo;s requirements.\n","permalink":"http://localhost:1313/updates/blog/ocr/","summary":"Optical Character Recognition Using Tesseract Tesseract OCR is one of the most popular open-source OCR libraries. It supports a wide range of languages and can recognize text from various image formats.\nFeatures Supported Formats: Multiple image formats (JPG, PNG, BMP, etc.). Languages: Supports multiple languages. Extensibility: Highly customizable and extensible. Efficiency: Greater than 70% accuracy, which can be increased by image modification. Requirements Platform: Windows, Linux, Mac SDK: .NET SDK Code Editor: Visual Studio 2022 and above (recommended) or any code editor of your choice Source Code Clone the repository:","title":"Tesseract OCR "},{"content":"Introduction I\u0026rsquo;ve codefrydev\n","permalink":"http://localhost:1313/updates/blog/test/","summary":"Introduction I\u0026rsquo;ve codefrydev","title":"codefrydev"}]